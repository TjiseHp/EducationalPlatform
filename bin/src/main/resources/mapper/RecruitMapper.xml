<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hp.dao.RecruitMapper">
  <resultMap id="BaseResultMap" type="com.hp.bean.Recruit">
    <id column="RECRUIT_NUM" jdbcType="INTEGER" property="recruitNum" />
    <result column="U_ID" jdbcType="INTEGER" property="uId" />
    <result column="U_ID2" jdbcType="INTEGER" property="uId2" />
    <result column="C_NUM" jdbcType="INTEGER" property="cNum" />
    <result column="CLASS_NUM" jdbcType="INTEGER" property="classNum" />
    <result column="RECRUIT_S_TIME" jdbcType="TIMESTAMP" property="recruitSTime" />
    <result column="RECRUIT_E_DATE" jdbcType="TIMESTAMP" property="recruitEDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hp.bean.Recruit">
    <result column="RECRUIT_TEXT" jdbcType="LONGVARCHAR" property="recruitText" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RECRUIT_NUM, U_ID, U_ID2, C_NUM, CLASS_NUM, RECRUIT_S_TIME, RECRUIT_E_DATE
  </sql>
  <sql id="Blob_Column_List">
    RECRUIT_TEXT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hp.bean.RecruitExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from e_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hp.bean.RecruitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from e_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from e_recruit
    where RECRUIT_NUM = #{recruitNum,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from e_recruit
    where RECRUIT_NUM = #{recruitNum,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hp.bean.RecruitExample">
    delete from e_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hp.bean.Recruit">
    insert into e_recruit (RECRUIT_NUM, U_ID, U_ID2, 
      C_NUM, CLASS_NUM, RECRUIT_S_TIME, 
      RECRUIT_E_DATE, RECRUIT_TEXT)
    values (#{recruitNum,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, #{uId2,jdbcType=INTEGER}, 
      #{cNum,jdbcType=INTEGER}, #{classNum,jdbcType=INTEGER}, #{recruitSTime,jdbcType=TIMESTAMP}, 
      #{recruitEDate,jdbcType=TIMESTAMP}, #{recruitText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hp.bean.Recruit">
    insert into e_recruit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recruitNum != null">
        RECRUIT_NUM,
      </if>
      <if test="uId != null">
        U_ID,
      </if>
      <if test="uId2 != null">
        U_ID2,
      </if>
      <if test="cNum != null">
        C_NUM,
      </if>
      <if test="classNum != null">
        CLASS_NUM,
      </if>
      <if test="recruitSTime != null">
        RECRUIT_S_TIME,
      </if>
      <if test="recruitEDate != null">
        RECRUIT_E_DATE,
      </if>
      <if test="recruitText != null">
        RECRUIT_TEXT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recruitNum != null">
        #{recruitNum,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uId2 != null">
        #{uId2,jdbcType=INTEGER},
      </if>
      <if test="cNum != null">
        #{cNum,jdbcType=INTEGER},
      </if>
      <if test="classNum != null">
        #{classNum,jdbcType=INTEGER},
      </if>
      <if test="recruitSTime != null">
        #{recruitSTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recruitEDate != null">
        #{recruitEDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recruitText != null">
        #{recruitText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hp.bean.RecruitExample" resultType="java.lang.Long">
    select count(*) from e_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update e_recruit
    <set>
      <if test="record.recruitNum != null">
        RECRUIT_NUM = #{record.recruitNum,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null">
        U_ID = #{record.uId,jdbcType=INTEGER},
      </if>
      <if test="record.uId2 != null">
        U_ID2 = #{record.uId2,jdbcType=INTEGER},
      </if>
      <if test="record.cNum != null">
        C_NUM = #{record.cNum,jdbcType=INTEGER},
      </if>
      <if test="record.classNum != null">
        CLASS_NUM = #{record.classNum,jdbcType=INTEGER},
      </if>
      <if test="record.recruitSTime != null">
        RECRUIT_S_TIME = #{record.recruitSTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recruitEDate != null">
        RECRUIT_E_DATE = #{record.recruitEDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recruitText != null">
        RECRUIT_TEXT = #{record.recruitText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update e_recruit
    set RECRUIT_NUM = #{record.recruitNum,jdbcType=INTEGER},
      U_ID = #{record.uId,jdbcType=INTEGER},
      U_ID2 = #{record.uId2,jdbcType=INTEGER},
      C_NUM = #{record.cNum,jdbcType=INTEGER},
      CLASS_NUM = #{record.classNum,jdbcType=INTEGER},
      RECRUIT_S_TIME = #{record.recruitSTime,jdbcType=TIMESTAMP},
      RECRUIT_E_DATE = #{record.recruitEDate,jdbcType=TIMESTAMP},
      RECRUIT_TEXT = #{record.recruitText,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update e_recruit
    set RECRUIT_NUM = #{record.recruitNum,jdbcType=INTEGER},
      U_ID = #{record.uId,jdbcType=INTEGER},
      U_ID2 = #{record.uId2,jdbcType=INTEGER},
      C_NUM = #{record.cNum,jdbcType=INTEGER},
      CLASS_NUM = #{record.classNum,jdbcType=INTEGER},
      RECRUIT_S_TIME = #{record.recruitSTime,jdbcType=TIMESTAMP},
      RECRUIT_E_DATE = #{record.recruitEDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hp.bean.Recruit">
    update e_recruit
    <set>
      <if test="uId != null">
        U_ID = #{uId,jdbcType=INTEGER},
      </if>
      <if test="uId2 != null">
        U_ID2 = #{uId2,jdbcType=INTEGER},
      </if>
      <if test="cNum != null">
        C_NUM = #{cNum,jdbcType=INTEGER},
      </if>
      <if test="classNum != null">
        CLASS_NUM = #{classNum,jdbcType=INTEGER},
      </if>
      <if test="recruitSTime != null">
        RECRUIT_S_TIME = #{recruitSTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recruitEDate != null">
        RECRUIT_E_DATE = #{recruitEDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recruitText != null">
        RECRUIT_TEXT = #{recruitText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where RECRUIT_NUM = #{recruitNum,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hp.bean.Recruit">
    update e_recruit
    set U_ID = #{uId,jdbcType=INTEGER},
      U_ID2 = #{uId2,jdbcType=INTEGER},
      C_NUM = #{cNum,jdbcType=INTEGER},
      CLASS_NUM = #{classNum,jdbcType=INTEGER},
      RECRUIT_S_TIME = #{recruitSTime,jdbcType=TIMESTAMP},
      RECRUIT_E_DATE = #{recruitEDate,jdbcType=TIMESTAMP},
      RECRUIT_TEXT = #{recruitText,jdbcType=LONGVARCHAR}
    where RECRUIT_NUM = #{recruitNum,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hp.bean.Recruit">
    update e_recruit
    set U_ID = #{uId,jdbcType=INTEGER},
      U_ID2 = #{uId2,jdbcType=INTEGER},
      C_NUM = #{cNum,jdbcType=INTEGER},
      CLASS_NUM = #{classNum,jdbcType=INTEGER},
      RECRUIT_S_TIME = #{recruitSTime,jdbcType=TIMESTAMP},
      RECRUIT_E_DATE = #{recruitEDate,jdbcType=TIMESTAMP}
    where RECRUIT_NUM = #{recruitNum,jdbcType=INTEGER}
  </update>
</mapper>